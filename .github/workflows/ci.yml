name: 持续集成

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: 缓存Go模块
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: 下载依赖
      run: go mod download

    - name: 运行测试
      run: go test -v ./...

    - name: 运行Go vet检查
      run: go vet ./...

    - name: 检查Go格式
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "需要格式化的文件:"
          gofmt -s -l .
          exit 1
        fi

    - name: 构建应用
      run: go build -v ./...

  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 测试Docker构建
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: claude-github-bot:test
        cache-from: type=gha
        cache-to: type=gha,mode=max